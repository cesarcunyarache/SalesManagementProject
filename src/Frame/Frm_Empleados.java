/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Frame;

import BusinessObject.Empleados;
import Components.EventCallBack;
import Components.EventTextField;
import JTable.EventAction;
import JTable.ModelAction;
import Message.Message;
import Notification.Notification;
import TransferObject.CategoriaDTO;
import TransferObject.EmpleadoDTO;
import TransferObject.ProductoDTO;
import datechooser.DateChooser;
import datechooser.EventDateChooser;
import datechooser.SelectedAction;
import datechooser.SelectedDate;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cesarcunyarache
 */
public class Frm_Empleados extends javax.swing.JPanel {

    /**
     * Creates new form Frm_Empleados
     */
    JFrame frame;
    Empleados ctr;
    DefaultTableModel df;
    EventAction eventAction;
    Notification mensaje;
    Notification mensajeError;
    DateChooser dateChooser = new DateChooser();
    DateChooser dateChooser1 = new DateChooser();
    ArrayList<EmpleadoDTO> lista;

    public Frm_Empleados(JFrame frame) {
        initComponents();
       
        this.frame = frame;
        ctr = new Empleados(frame);
         lista = ctr.lista();
        table1.fixTable(jScrollPane1);
        cbo_genero.setSelectedItem("Seleccionar gÃ©nero");
        dateChooser.setTextRefernce(txt_fechaNacimiento);
        dateChooser1.setTextRefernce(txt_fechaContrato);
        dateChooser.addEventDateChooser(new EventDateChooser() {
            @Override
            public void dateSelected(SelectedAction action, SelectedDate date) {
                System.out.println(date.getDay() + "-" + date.getMonth() + "-" + date.getYear());
                if (action.getAction() == SelectedAction.DAY_SELECTED) {
                    dateChooser.hidePopup();
                }
            }
        });

        dateChooser1.addEventDateChooser(new EventDateChooser() {
            @Override
            public void dateSelected(SelectedAction action, SelectedDate date) {
                System.out.println(date.getDay() + "-" + date.getMonth() + "-" + date.getYear());
                if (action.getAction() == SelectedAction.DAY_SELECTED) {
                    dateChooser.hidePopup();
                }
            }
        });

        df = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (column == 9) {
                    return true;
                }
                if (column == 10) {
                    return false;
                }

                return false;

            }
        };
        init();
        
        txt_busqueda.addEvent(new EventTextField() {
            @Override
            public void onPressed(EventCallBack call) {
                //  Test
                try {
                    for (int i = 1; i <= 100; i++) { 
                        Thread.sleep(5);
                    }
                    lista = ctr.BusquedaInteligente(txt_busqueda.getText());
                    init();
                    call.done();
                } catch (Exception e) {
                  
                }
            }

            @Override
            public void onCancel() {

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new JTable.Table();
        txt_correo = new Components.TextFieldSuggestion();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_nombres = new Components.TextFieldSuggestion();
        jLabel3 = new javax.swing.JLabel();
        txt_apellidos = new Components.TextFieldSuggestion();
        jLabel4 = new javax.swing.JLabel();
        txt_telefono = new Components.TextFieldSuggestion();
        jLabel5 = new javax.swing.JLabel();
        txt_dni = new Components.TextFieldSuggestion();
        jLabel6 = new javax.swing.JLabel();
        txt_fechaNacimiento = new Components.TextFieldSuggestion();
        txt_fechaContrato = new Components.TextFieldSuggestion();
        jLabel7 = new javax.swing.JLabel();
        cbo_genero = new Components.ComboBoxSuggestion();
        btn_actualizar = new Components.ButtonShadow();
        btn_agregar = new Components.ButtonShadow();
        btn_calendario = new Components.ButtonShadow();
        btn_calendario1 = new Components.ButtonShadow();
        btn_reset = new Components.ButtonShadow();
        txt_busqueda = new Components.TextFieldAnimation();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 1190, 220));
        jPanel1.add(txt_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, 260, -1));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Correo");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 60, 30));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nombres");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 60, 30));
        jPanel1.add(txt_nombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 260, -1));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Apellidos");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 60, 30));
        jPanel1.add(txt_apellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 260, -1));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Telefono");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 60, 30));
        jPanel1.add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 260, -1));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("DNI ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 60, 30));
        jPanel1.add(txt_dni, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 260, -1));

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Fecha de nacimiento");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 150, 30));
        jPanel1.add(txt_fechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, 260, -1));
        jPanel1.add(txt_fechaContrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 300, 260, -1));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Fecha de contrato");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 130, 30));

        cbo_genero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar gÃ©nero", "Masculino", "Femenino" }));
        cbo_genero.setToolTipText("");
        jPanel1.add(cbo_genero, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 260, 40));

        btn_actualizar.setBackground(new java.awt.Color(0, 153, 0));
        btn_actualizar.setForeground(new java.awt.Color(255, 255, 255));
        btn_actualizar.setText("âœ“");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 400, 40, 40));

        btn_agregar.setBackground(new java.awt.Color(51, 51, 51));
        btn_agregar.setForeground(new java.awt.Color(255, 255, 255));
        btn_agregar.setText("Agregar");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, 110, -1));

        btn_calendario.setText("ðŸ—“");
        btn_calendario.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        btn_calendario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calendarioActionPerformed(evt);
            }
        });
        jPanel1.add(btn_calendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 210, 50, 40));

        btn_calendario1.setText("ðŸ—“");
        btn_calendario1.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        btn_calendario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calendario1ActionPerformed(evt);
            }
        });
        jPanel1.add(btn_calendario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 300, 50, 40));

        btn_reset.setForeground(new java.awt.Color(255, 255, 255));
        btn_reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/actualizar.png"))); // NOI18N
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });
        jPanel1.add(btn_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 400, 40, 40));
        jPanel1.add(txt_busqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 40, 240, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1242, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        try {

            if (!cbo_genero.getSelectedItem().equals("Seleccionar gÃ©nero") &&
                !txt_telefono.getText().isEmpty() &&  !txt_correo.getText().isEmpty()
                && !txt_fechaNacimiento.getText().isEmpty() && !txt_fechaContrato.getText().isEmpty()) {
                SimpleDateFormat sf = new SimpleDateFormat("dd-MM-yyyy");
                Date fechaN;
                Date fechaC;

                fechaN = sf.parse(txt_fechaNacimiento.getText());
                long l = fechaN.getTime();
                java.sql.Date f = new java.sql.Date(l);

                fechaC = sf.parse(txt_fechaContrato.getText());
                long l1 = fechaC.getTime();
                java.sql.Date f1 = new java.sql.Date(l1);

                String dni = txt_dni.getText();
                String nombres = txt_nombres.getText();
                String apellidos = txt_apellidos.getText();
                String genero = (String) cbo_genero.getSelectedItem();
                String telefono = txt_telefono.getText();
                String correo = txt_correo.getText();

                ctr.Modificar(f, f1, dni, nombres, apellidos, genero, telefono, correo);
                limpiar();
                lista = ctr.lista();
                init();
            } else {
                 mensajeError = new Notification("Uno o mÃ¡s cambos vacios",
                    frame, Notification.Type.WARNING, Notification.Location.TOP_RIGHT);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed

        try {
            if (!cbo_genero.getSelectedItem().equals("Seleccionar gÃ©nero") &&
                !txt_telefono.getText().isEmpty() &&  !txt_correo.getText().isEmpty()
                && !txt_fechaNacimiento.getText().isEmpty() && !txt_fechaContrato.getText().isEmpty()) {
                SimpleDateFormat sf = new SimpleDateFormat("dd-MM-yyyy");
                Date fechaN;
                Date fechaC;

                fechaN = sf.parse(txt_fechaNacimiento.getText());
                long l = fechaN.getTime();
                java.sql.Date f = new java.sql.Date(l);

                fechaC = sf.parse(txt_fechaContrato.getText());
                long l1 = fechaC.getTime();
                java.sql.Date f1 = new java.sql.Date(l1);

                String dni = txt_dni.getText();
                String nombres = txt_nombres.getText();
                String apellidos = txt_apellidos.getText();
                String genero = (String) cbo_genero.getSelectedItem();
                String telefono = txt_telefono.getText();
                String correo = txt_correo.getText();

                ctr.insertar(f, f1, dni, nombres, apellidos, genero, telefono, correo);
                limpiar();
                lista = ctr.lista();
                init();
            } else {
                mensajeError = new Notification("Uno o mÃ¡s cambos vacios",
                    frame, Notification.Type.WARNING, Notification.Location.TOP_RIGHT);
            }

        } catch (Exception ex) {
            System.out.println(ex);
        }


    }//GEN-LAST:event_btn_agregarActionPerformed

    private void btn_calendarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calendarioActionPerformed
        dateChooser.showPopup();
    }//GEN-LAST:event_btn_calendarioActionPerformed

    private void btn_calendario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calendario1ActionPerformed
        dateChooser1.showPopup();
    }//GEN-LAST:event_btn_calendario1ActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        limpiar();
        lista = ctr.lista();
        init();

    }//GEN-LAST:event_btn_resetActionPerformed

    public void init() {

        eventAction = new EventAction<EmpleadoDTO>() {
            @Override
            public void delete(EmpleadoDTO aux) {
                if (showMessage("Eliminar Empleado : " + aux.getNombres())) {

                    String id = (String) (table1.getValueAt(table1.getSelectedRow(), 1));
                    ctr.Eliminar(id);
                    lista = ctr.lista();
                    llenarTabla(eventAction);

                    System.out.println("User click OK");
                } else {
                    System.out.println("User click Cancel");
                }
            }

            @Override
            public void update(EmpleadoDTO aux) {
                if (showMessage("Actualizar Empleado : " + aux.getNombres())) {
                    try {

                        SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
                        SimpleDateFormat sf1 = new SimpleDateFormat("dd-MM-yyyy");
                        Date fechaN;
                        Date fechaC;
                        String id = (String) (table1.getValueAt(table1.getSelectedRow(), 1));
                        EmpleadoDTO var = ctr.Buscar(id);

                        if (var != null) {
                            txt_dni.setText(var.getDni());
                            txt_nombres.setText(var.getNombres());
                            txt_apellidos.setText(var.getApellidos());
                            cbo_genero.setSelectedItem(var.getGenero());
                            txt_telefono.setText(var.getTelefono());
                            txt_correo.setText(var.getCorreo());

                            Date d1 = new Date(var.getFechaNacimiento().getTime());
//                            String f = sf.format(dr);
//                            Date d = sf.parse(f);
                            String ultimo = sf1.format(d1);

                            Date d2 = new Date(var.getFechaContrato().getTime());
                            String ultimo2 = sf1.format(d2);

                            txt_fechaNacimiento.setText(String.valueOf(ultimo));
                            txt_fechaContrato.setText(ultimo2);
                            llenarTabla(eventAction);

                            System.out.println("User click OK");
                        }
                    } catch (Exception e) {
                        System.out.println(e);
                    }

                } else {
                    System.out.println("User click Cancel");
                }
            }
        };

        llenarTabla(eventAction);
    }

    public void llenarTabla(EventAction eventAction) {

        df.setColumnCount(0);
        df.setRowCount(0);

        String[] cabezera = {"CÃ³digo", "DNI", "Nombres", "Apellidos", "GÃ©nero", "Telefono", "Correo", "Fecha de Nacimiento", "Fecha de contrato", "Accion"};
        df.setColumnIdentifiers(cabezera);
        ModelAction model;
        Object[] datos = new Object[df.getColumnCount()];

//        ArrayList<EmpleadoDTO> lista = new ArrayList<>();
//        lista = ctr.lista();

        if (lista != null) {

            for (int i = 0; i < lista.size(); i++) {
                EmpleadoDTO e = lista.get(i);

                datos[0] = e.getId();
                datos[1] = e.getDni();
                datos[2] = e.getNombres();
                datos[3] = e.getApellidos();
                datos[4] = e.getGenero();
                datos[5] = e.getTelefono();
                datos[6] = e.getCorreo();
                datos[7] = e.getFechaNacimiento();
                datos[8] = e.getFechaContrato();
                datos[9] = model = new ModelAction<EmpleadoDTO>(e, eventAction);

                df.addRow(datos);
            }

            table1.setModel(df);

        }
    }

    private boolean showMessage(String message) {
        Message obj = new Message(frame, true);
        obj.showMessage(message);
        return obj.isOk();
    }
    
    public void limpiar(){
        txt_dni.setText("");
        txt_nombres.setText("");
        txt_apellidos.setText("");
        txt_correo.setText("");
        txt_telefono.setText("");
        txt_fechaContrato.setText("");
        txt_fechaNacimiento.setText("");
        cbo_genero.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.ButtonShadow btn_actualizar;
    private Components.ButtonShadow btn_agregar;
    private Components.ButtonShadow btn_calendario;
    private Components.ButtonShadow btn_calendario1;
    private Components.ButtonShadow btn_reset;
    private Components.ComboBoxSuggestion cbo_genero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private JTable.Table table1;
    private Components.TextFieldSuggestion txt_apellidos;
    private Components.TextFieldAnimation txt_busqueda;
    private Components.TextFieldSuggestion txt_correo;
    private Components.TextFieldSuggestion txt_dni;
    private Components.TextFieldSuggestion txt_fechaContrato;
    private Components.TextFieldSuggestion txt_fechaNacimiento;
    private Components.TextFieldSuggestion txt_nombres;
    private Components.TextFieldSuggestion txt_telefono;
    // End of variables declaration//GEN-END:variables
}
